name: lva

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Print versions
        run: |
          composer --version
          node --version
          npm --version
      - uses: actions/checkout@v2
      - name: Setup Environment
        run: |
          cp .env.ci .env
          touch ./storage/logs/laravel.log
          touch ./database/database.sqlite
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        run: npm install
      - name: Cache composer packages
        uses: actions/cache@v1
        env:
          cache-name: cache-composer-packages
        with:
          path: ./vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        run: composer install -n --ignore-platform-reqs --no-progress --no-suggest
      - name: Run Webpack
        run: npm run prod
  unit-tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        run: |
          cp .env.ci .env
          touch ./storage/logs/laravel.log
          touch ./database/database.sqlite
      - name: Restore node modules cache
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Restore composer packages cache
        uses: actions/cache@v1
        env:
          cache-name: cache-composer-packages
        with:
          path: ./vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Migrate Database
        run: php artisan migrate --force
      - name: Setup Laravel Passport
        run: php artisan passport:install
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: |
          vendor/bin/phpunit


  dusk-tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        run: |
          cp .env.ci .env
          touch ./storage/logs/laravel.log
          touch ./database/database.sqlite
      - name: Restore node modules cache
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore composer packages cache
        uses: actions/cache@v1
        env:
          cache-name: cache-composer-packages
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Migrate Database
        run: php artisan migrate --force
      - name: Setup Laravel Passport
        run: php artisan passport:install
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Update Chrome Driver
        run: |
          CHROME_VERSION="$(google-chrome --version)"
          CHROMEDRIVER_RELEASE="$(echo $CHROME_VERSION | sed 's/^Google Chrome //')"
          CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*}
          php artisan dusk:chrome-driver $CHROMEDRIVER_RELEASE
      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &
      - name: Run Laravel Server
        run: php artisan serve &
      - name: Run Laravel Dusk Tests
        run: php artisan dusk


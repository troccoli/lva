# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    branches:
      only:
        - master
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-stretch-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:3

    steps:
      - checkout

      - run:
          name: Install System Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y zlib1g-dev libsqlite3-dev
      - run:
          name: Install PHP Extensions
          command: sudo docker-php-ext-install zip

      - run:
          name: Version checks
          command: |
            php --version
            php --ini
            php -m

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-

      - run:
          name: Install Composer Dependencies
          command: composer install --no-progress --no-suggest --no-interaction --optimize-autoloader

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-

      - run:
          name: Install Node Dependencies
          command: npm install

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Setup Environment
          command: |
            cp .env.ci .env
            php artisan key:generate
            touch ./storage/logs/laravel.log
            touch ./database/database.sqlite

      - run:
          name: Run Webpack
          command: npm run production

      - run:
          name: Migrate Database
          command: php artisan migrate

      - run:
          name: Run Unit Tests
          command: |
            mkdir -p ./logs/phpunit
            vendor/bin/phpunit

      - run:
          name: Start Chrome Driver
          #          command: |
          #            php artisan dusk:update
          #            vendor/laravel/dusk/bin/chromedriver-linux
          command: vendor/laravel/dusk/bin/chromedriver-linux
          background: true

      - run:
          name: Run Laravel Server
          command: php artisan serve
          background: true

      - run:
          name: Run Laravel Dusk Tests
          command: php artisan dusk --filter testListAvailableAppointments
          environment:
            USE_CHROME_DRIVER: true

      - store_artifacts:
          path: ./logs/phpunit
          destination: phpunit

      - store_artifacts:
          path: ./tests/Browser/console
          destination: console

      - store_artifacts:
          path: ./tests/Browser/screenshots
          destination: screenshots

      - store_artifacts:
          path: ./storage/logs
          destination: laravel
